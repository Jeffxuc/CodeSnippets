<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Color x:Key="ScrollViewer_Style_Selected_Color">#505050</Color>
    <Color x:Key="ScrollViewer_Style_UnSelected_Color">#cccccc</Color>
    <Color x:Key="ScrollViewer_Style_Background_Color">#26000000</Color>
    <sys:Double x:Key="ScrollBar_Background_Width_Hover">10</sys:Double>
    <sys:Double x:Key="ScrollBar_Background_Width">10</sys:Double>
    <sys:Double x:Key="ScrollBar_Width_Hover">6</sys:Double>
    <sys:Double x:Key="ScrollBar_Width">4</sys:Double>

    <CornerRadius x:Key="ScrollBar_Background_Radius_Rate">5</CornerRadius>
    <sys:Double x:Key="ScrollBar_Radius_Rate">2</sys:Double>
    <SolidColorBrush x:Key="ScrollViewer_Style_UnSelected" Color="#cccccc" />

    <!-- Vertical Thumb Style -->
    <Style x:Key="ScrollBarBaseThumbVertical" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Width="{TemplateBinding Width}" Background="Transparent">
                        <!--控制中间滑块的样式：圆角大小，高度，宽度，颜色-->
                        <Rectangle x:Name="rectangle" 
                                   RadiusX="{StaticResource ScrollBar_Radius_Rate}" RadiusY="{StaticResource ScrollBar_Radius_Rate}" 
                                   Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                   HorizontalAlignment="Right" SnapsToDevicePixels="True"
                                     Fill="{TemplateBinding Background}">
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Horizontal Thumb Style -->
    <Style x:Key="ScrollBarBaseThumbHorizontal" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Height="{TemplateBinding Height}" Background="Transparent">
                        <Rectangle x:Name="rectangle" 
                                   RadiusX="{StaticResource ScrollBar_Radius_Rate}" RadiusY="{StaticResource ScrollBar_Radius_Rate}"  
                                   Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"  
                                   VerticalAlignment="Bottom" SnapsToDevicePixels="True" 
                                   Fill="{TemplateBinding Background}">
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RepeatButton Style -->
    <Style x:Key="ScrollBarBaseRepeatButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">

                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar Style -->
    <Style x:Key="ScrollBar_Style" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="MouseEnterStoryBoardVertical">
                            <ColorAnimation Storyboard.TargetName="thumb"  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0"   To="{StaticResource ScrollViewer_Style_Selected_Color}" />
                            <ColorAnimation Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0" To="{StaticResource ScrollViewer_Style_Background_Color}" />
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bg" Storyboard.TargetProperty="Width" 
                                                           BeginTime="0:0:0">

                                <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Background_Width_Hover}"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="thumb" Storyboard.TargetProperty="Width" 
                                                           BeginTime="0:0:0">
                                <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Width_Hover}"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="MouseLeaveStoryBoardVertical">
                            <ColorAnimation Storyboard.TargetName="thumb" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0" To="{StaticResource ScrollViewer_Style_UnSelected_Color}"/>
                            <ColorAnimation Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0" To="Transparent"/>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bg" Storyboard.TargetProperty="Width" 
                                                           BeginTime="0:0:0">
                                <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Background_Width}"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="thumb" Storyboard.TargetProperty="Width" 
                                                           BeginTime="0:0:0">
                                <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Width}"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="{StaticResource ScrollBar_Background_Width}">
                        <Border x:Name="Bd" Background="Transparent" CornerRadius="{StaticResource ScrollBar_Background_Radius_Rate}"/>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Margin="0 4">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Width="{StaticResource ScrollBar_Width}"  
                                       Background="{StaticResource ScrollViewer_Style_UnSelected}" 
                                       Style="{StaticResource ScrollBarBaseThumbVertical}"/>
                            </Track.Thumb>
                            <Track.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard Storyboard="{StaticResource MouseEnterStoryBoardVertical}"/>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave" >
                                    <BeginStoryboard Storyboard="{StaticResource MouseLeaveStoryBoardVertical}"/>
                                </EventTrigger>
                            </Track.Triggers>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="8"/>
                <Setter Property="MinHeight" Value="8"/>
                <Setter Property="BorderThickness" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="MouseEnterStoryBoardHorizontal">
                                    <ColorAnimation Storyboard.TargetName="thumb"  Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0"   To="{StaticResource ScrollViewer_Style_Selected_Color}" />
                                    <ColorAnimation Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0" To="{StaticResource ScrollViewer_Style_Background_Color}" />
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bg" Storyboard.TargetProperty="Height" 
                                                           BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Background_Width_Hover}"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="thumb" Storyboard.TargetProperty="Height" 
                                                           BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Width_Hover}"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="MouseLeaveStoryBoardHorizontal">
                                    <ColorAnimation Storyboard.TargetName="thumb" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0" To="{StaticResource ScrollViewer_Style_UnSelected_Color}"/>
                                    <ColorAnimation Storyboard.TargetName="Bd" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"
                                            BeginTime="0:0:0" Duration="0" To="Transparent"/>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bg" Storyboard.TargetProperty="Height" 
                                                           BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Background_Width}"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="thumb" Storyboard.TargetProperty="Height" 
                                                           BeginTime="0:0:0">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="{StaticResource ScrollBar_Width}"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Height="{StaticResource ScrollBar_Background_Width}">
                                <Border x:Name="Bd" Background="Transparent" CornerRadius="{StaticResource ScrollBar_Background_Radius_Rate}"/>
                                <Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Margin="4 0">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource ScrollBarBaseRepeatButton}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="thumb" Height="{StaticResource ScrollBar_Width}"  
                                       Background="{StaticResource ScrollViewer_Style_UnSelected}" 
                                       Style="{StaticResource ScrollBarBaseThumbHorizontal}"/>
                                    </Track.Thumb>
                                    <Track.Triggers>
                                        <EventTrigger RoutedEvent="MouseEnter">
                                            <BeginStoryboard Storyboard="{StaticResource MouseEnterStoryBoardHorizontal}"/>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="MouseLeave" >
                                            <BeginStoryboard Storyboard="{StaticResource MouseLeaveStoryBoardHorizontal}"/>
                                        </EventTrigger>
                                    </Track.Triggers>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- ScrollViewer Style -->
    <ControlTemplate x:Key="ScrollViewerBaseControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="showGrid" Background="{TemplateBinding Background}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <ScrollContentPresenter x:Name="ScrollContentPresenter_Part" Grid.Row="0" Grid.Column="0"
                                    Grid.RowSpan="2" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False" CanVerticallyScroll="False" Margin="{TemplateBinding Padding}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1"  Grid.Row="0" Opacity="1" 
                       Style="{StaticResource ScrollBar_Style}" 
                       AutomationProperties.AutomationId="VerticalScrollBar" 
                       Cursor="Arrow"  Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportHeight}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar"  Grid.Column="0" Grid.Row="1"  Opacity="1"
                       Margin="0 0 0 1" Height="12" Orientation="Horizontal" 
                       Style="{StaticResource ScrollBar_Style}" 
                       AutomationProperties.AutomationId="HorizontalScrollBar" 
                       Cursor="Arrow"  Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" 
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       ViewportSize="{TemplateBinding ViewportWidth}"/>
            
        </Grid>
    </ControlTemplate>

    <Style x:Key="ScrollViewer_Style" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ScrollViewerBaseControlTemplate}"/>
        <Setter Property="PanningMode" Value="Both"/>
        <Setter Property="IsManipulationEnabled" Value="True"/>
    </Style>

    
    
    <!--ComboBox-->
    <!--1. ToggleButton Style-->
    <ControlTemplate x:Key="toggleButton_Style" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="24"/>
                <ColumnDefinition Width="4" />
            </Grid.ColumnDefinitions>
            <Border x:Name="WholeBorder" Grid.ColumnSpan="3"  BorderThickness="1" CornerRadius="4"
                    BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" >
                <!--控制整个ToggleButton的Background颜色-->
            </Border>
             <!--用来显示ToggleButton的内容-->
            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <!--控制左边两列的 Background 颜色-->
            <Border Grid.ColumnSpan="2" Margin="1">
                <Border.Background>
                    <SolidColorBrush Color="Transparent"/>
                </Border.Background>
            </Border>
            <!--右侧 dropDown 的箭头样式-->
            <Path x:Name="Arrow"  Grid.Column="1" 
                  HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M0, 0 L8, 8 L16, 0 L8, 8 "
                  Stroke="#000000" StrokeThickness="1"
                  Width="16">
            </Path>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="WholeBorder" Property="BorderBrush" Value="#FF1452CC"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="WholeBorder" Property="BorderBrush" Value="#FF019CFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="WholeBorder" Property="Background" Value="#808080"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--1. 下拉备选框会显示全部的备选内容，无滚动条，因为其Popup中无 ScrollViewer-->
    <Style x:Key="ComboBox_Style1" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid >
                        <ToggleButton Focusable="false" ClickMode="Press"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Template="{StaticResource toggleButton_Style}" Content="{TemplateBinding SelectedItem}"/>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid x:Name="dropDownPanel" Width="140">
                                <Border x:Name="dropDownBorder" Background="#FFFFFF" BorderBrush="Black" BorderThickness="1" Opacity="0.4"/>
                                <StackPanel IsItemsHost="True"  KeyboardNavigation.DirectionalNavigation="Contained" Margin="6"/>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--2. 下拉备选框高度可以添加限制，超过指定的高度就可以通过拖拉滚动条来进行显示. 区别上面在于其弹框 Popup中有 ScrollViewer -->
    <Style x:Key="ComboBox_Style2" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid >
                        <ToggleButton Focusable="false" ClickMode="Press"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Template="{StaticResource toggleButton_Style}" Content="{TemplateBinding SelectedItem}"/>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid x:Name="dropDownPanel" Width="140" MaxHeight="100">
                                <Border x:Name="dropDownBorder" Background="#FFFFFF" BorderBrush="Black" BorderThickness="1"/>
                                <ScrollViewer Style="{StaticResource ScrollViewer_Style}">
                                    <StackPanel IsItemsHost="True"  KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

</ResourceDictionary>